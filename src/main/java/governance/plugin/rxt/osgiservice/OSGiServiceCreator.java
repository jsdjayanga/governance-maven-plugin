package governance.plugin.rxt.osgiservice;

import governance.plugin.common.GovernanceSOAPMessageCreator;
import governance.plugin.rxt.AbstractAssetCreator;
import governance.plugin.util.PathNameResolver;
import org.apache.maven.plugin.MojoExecutionException;
import org.apache.maven.plugin.logging.Log;

import java.util.List;
import java.util.Map;

/**
 * Created by jayanga on 2/9/14.
 */
public class OSGiServiceCreator extends AbstractAssetCreator {

    public static final String GREG_SERVICE_RESOURCE_PATH = "/trunk/osgiservices/";

    Log logger;
    public OSGiServiceCreator(Log logger, String gregServiceUrl) throws MojoExecutionException {
        super(gregServiceUrl, "OSGiService.OSGiServiceHttpsSoap12Endpoint");
        this.logger = logger;
    }

    public boolean create(Map<String, Object> parameters) throws MojoExecutionException {

        String className = (String)parameters.get("className");
        String version = (String)parameters.get("version");
        String description = "generated by maven-governance-plugin.";
        List<Map<String, String>> references = (List<Map<String, String>>)parameters.get("references");

        String name = className.substring(className.lastIndexOf(".") + 1);
        String namespace = className.substring(0, className.lastIndexOf("."));
        namespace = PathNameResolver.PackageToNamespace(namespace);

        System.out.println("=======================+:" + name + "|" + namespace);

        String OSGiServicePath = getResourcePath(new String[]{name, namespace});

        String createServiceRequst =
                GovernanceSOAPMessageCreator.createAddOSGiServiceRequest(name
                        , namespace
                        , version
                        , description
                        ,references);

        System.out.println(createServiceRequst);

        logger.debug("Service creation request. [" + createServiceRequst + "]");

        boolean isOSGiServiceCreated = super.createAsset(OSGiServicePath, createServiceRequst);

        if (logger.isInfoEnabled()){
            if (isOSGiServiceCreated){
                logger.info("Request sent to create Service: "+ name);
            }else{
                logger.info("Service already available: " + name);
            }
        }

        return isOSGiServiceCreated;
    }

    @Override
    public boolean create(Object[] parameters) throws MojoExecutionException {
        return false;
    }

    @Override
    public String getResourcePath(String[] parameters) throws MojoExecutionException {
        String name = parameters[0];
        String namespace = parameters[1];

        return PathNameResolver.getResourcePath(name, namespace, OSGiServiceCreator.GREG_SERVICE_RESOURCE_PATH);
    }
}
